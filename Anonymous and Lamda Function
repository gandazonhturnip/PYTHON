from ast import Num


def kuadrat(angka): return angka**2


print(f"hasil lambda kuadrat = {kuadrat(7)}")


def pangkat(Num, pow): return Num**pow


print(f"hasil dari pangkat lambda = {pangkat(5,2)}")

# sorting
data_list = ["janggual", "alponso", "feby"]
data_list.sort()
print(f"data sorted = {data_list}")

# sorting pakai panjang


def panjang_nama(nama):
    return len(nama)


data_list.sort(key=panjang_nama)
print(f"sorted list by panjang = {data_list}")

# sorting pakai lambda
data_list = ["janggual", "alponso", "feby"]
data_list.sort(key=lambda nama: len(nama))
print(f"sort pakai lambda = {data_list}")

# filter
data_angka = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
data_angka_baru = list(filter(lambda x: x < 7, data_angka))
print(data_angka_baru)

# data genap
data_genap = list(filter(lambda x: x % 2 == 0, data_angka))
print(data_genap)
data_ganjil = list(filter(lambda x: x % 2 != 0, data_angka))
print(data_ganjil)
kelipatan3 = list(filter(lambda x: x % 3 == 0, data_angka))
print(kelipatan3)

# anonymous function
# currying <- Haskel Curry


def pangkat(angka, n):
    hasil = angka**n
    return hasil


hasil_pangkat = pangkat(5, 2)
print(f"hasil pangkat = {hasil_pangkat}")

# dengan currying


def pangkat(n):
    return lambda a: a**n


pangkat3 = pangkat(4)
print(f"pangkat 4 = {pangkat3(5)}")
print(f"pangkat bebas = {pangkat(3)(5)}")
